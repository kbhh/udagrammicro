apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: udagram-api-feed
  name: udagram-api-feed  
spec:
  replicas: 1
  selector:
    matchLabels:
      service: udagram-api-feed
  template:
    metadata:
      labels:
        service: udagram-api-feed
    spec:
      containers:
      - image: kibrom/udagram-api-feed:v10
        name: udagram-api-feed
        imagePullPolicy: Always
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"    
        env:
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef: 
                 name: udagram-config
                 key:  POSTGRES_DB 
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef: 
                 name: udagram-config
                 key:  POSTGRES_HOST         
          - name: AWS_REGION
            valueFrom:
              configMapKeyRef: 
                 name: udagram-config
                 key:  AWS_REGION
          - name: AWS_PROFILE
            valueFrom:
              configMapKeyRef: 
                 name: udagram-config
                 key:  AWS_PROFILE
          - name: AWS_BUCKET
            valueFrom:
              configMapKeyRef: 
                 name: udagram-config
                 key:  AWS_BUCKET
          - name: URL
            valueFrom:
              configMapKeyRef: 
                 name: udagram-config
                 key:  URL
          - name: POSTGRES_USERNAME
            valueFrom:
              configMapKeyRef: 
                 name: udagram-secret
                 key:  POSTGRES_USERNAME                                                 
          - name: POSTGRES_PASSWORD
            valueFrom:
              configMapKeyRef: 
                 name: udagram-secret
                 key:  POSTGRES_PASSWORD  
          - name: JWT_SECRET
            valueFrom:
              configMapKeyRef: 
                 name: udagram-secret
                 key:  JWT_SECRET
        volumeMounts:
          - name: aws-secret
            mountPath: "/root/.aws/"
            readOnly: true
      restartPolicy: Always
      volumes:
        - name: aws-secret
          secret:
            secretName: aws-secret           